# PRODUCTION!!!!!!!!!!!!!!
version: "3.9"
services:
  api:
    restart: always
    stdin_open: true
    build: ./server
    environment:
      - DATABASE_URL=postgresql://root:password@postgresDb:5432/mydb?schema=public
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - 5005:5005
    depends_on:
      - postgresDb

  postgresDb:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_DB=mydb
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
    ports:
      - 5432:5432
    volumes:
      - postgresDb:/var/lib/postgresql/data

  nginx:
    depends_on:
      - api
    restart: always
    build:
      context: ./nginx
      target: "prod"
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./client/build:/usr/share/nginx/reallyepichardball
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

volumes:
  postgresDb:
# docker compose -f docker-compose.prod.yaml run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ --dry-run -d reallyepichardball.com
# docker compose -f docker-compose.prod.yaml run --rm  certbot certonly --webroot --webroot-path /var/www/certbot/ -d reallyepichardball.com

